# outcome: SAT + cvc4(97536,0x7fff7916d300) malloc: *** error for object 0x7fd6c5011120: pointer being freed was not allocated
#   sometimes: cvc4 crash
# expected: SAT without the above message

# Find out which options to CVC4 are problematic and tell Andy.

val a : type.
val b : type.

data nat :=
  zero
| Suc nat.

rec plus : nat -> nat -> nat :=
  forall (n : nat). plus zero n = n;
  forall (m : nat) (n : nat). plus (Suc m) n = Suc (plus m n).

data list :=
  Nil
| Cons a list.

val xs : list.

rec size : list -> nat :=
  size Nil = zero;
  forall (x21 : a) (x22 : list). size (Cons x21 x22) = plus (size x22) (Suc zero).

data list1 :=
  Nil1
| Cons1 b list1.

val ys : list1.

rec append : list1 -> list1 -> list1 :=
  forall (ys1 : list1). append Nil1 ys1 = ys1;
  forall (x : b) (xs1 : list1) (ys1 : list1). append (Cons1 x xs1) ys1 = Cons1 x (append xs1 ys1).
rec rev : list1 -> list1 :=
  rev Nil1 = Nil1;
  forall (x : b) (xs1 : list1). rev (Cons1 x xs1) = append (rev xs1) (Cons1 x Nil1).
rec size1 : list1 -> nat :=
  size1 Nil1 = zero;
  forall (x21 : b) (x22 : list1). size1 (Cons1 x21 x22) = plus (size1 x22) (Suc zero).

data prod :=
  Pair a b.
data list2 :=
  Nil2
| Cons2 prod list2.

rec zip : list -> list1 -> list2 :=
  forall (xs1 : list). zip xs1 Nil1 = Nil2;
  forall (xs1 : list) (y : b) (ys1 : list1). zip xs1 (Cons1 y ys1) = (match xs1 with | Nil -> Nil2 | Cons uu21 uu22 -> Cons2 (Pair uu21 y) (zip uu22 ys1) end).
rec append1 : list2 -> list2 -> list2 :=
  forall (ys1 : list2). append1 Nil2 ys1 = ys1;
  forall (x : prod) (xs1 : list2) (ys1 : list2). append1 (Cons2 x xs1) ys1 = Cons2 x (append1 xs1 ys1).
rec rev1 : list2 -> list2 :=
  rev1 Nil2 = Nil2;
  forall (x : prod) (xs1 : list2). rev1 (Cons2 x xs1) = append1 (rev1 xs1) (Cons2 x Nil2).

goal ~ ((size xs = size1 ys) => (rev1 (zip xs ys) = zip xs (rev ys))).
