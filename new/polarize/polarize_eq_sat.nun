data nat :=
  Zero
| Suc nat.

pred even : nat -> prop :=
  even Zero;
  forall n. even n => even (Suc (Suc n)).

copred odd : nat -> prop :=
  odd (Suc Zero);
  forall n. odd n => odd (Suc (Suc n)).

rec the_goal : prop :=
  the_goal = (exists n. even n = (~ odd n)).

goal the_goal.
